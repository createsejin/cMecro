from time import sleep
import mss


class Arduino000:
    debug_pix = False
    presented_b = (1037, 417, 1260, 745)  # 제시된 지문
    operation_b = (470, 418, 741, 976)  # operation bbox
    presented = {
        'first': {
            'cp': [(62, 215), (133, 299), (148, 158), (191, 251), (40, 56)],
            'pc': [(59, 61, 62), (60, 36, 35), (42, 35, 36), (60, 49, 49), (58, 62, 62)],
        },
        'second': {
            'cp': [(20, 263), (125, 278), (81, 110), (90, 77), (160, 17)],
            'pc': [(59, 50, 49), (62, 62, 62), (56, 62, 62), (56, 62, 62), (60, 62, 62)],
        },
        'third': {
            'cp': [(133, 95), (149, 104), (93, 176), (153, 287), (156, 194)],
            'pc': [(60, 62, 62), (60, 62, 62), (61, 36, 35), (62, 36, 35), (62, 62, 62)],
        },
        'fourth': {
            'cp': [(86, 92), (79, 107), (109, 230), (142, 314), (83, 260)],
            'pc': [(54, 62, 62), (49, 36, 35), (61, 50, 49), (58, 49, 49), (49, 49, 50)],
        }
    }
    solution_pix = {
        'first': {
            'A': {
                '00': {
                    'cp': [(60, 55), (90, 94), (71, 58), (14, 115), (36, 28)],
                    'pc': [(46, 48, 49), (60, 53, 53), (52, 49, 50), (60, 62, 62), (60, 62, 62)],
                },
                '01': {
                    'cp': [(213, 46), (204, 55), (244, 76), (195, 70), (222, 25)],
                    'pc': [(60, 43, 42), (58, 58, 58), (50, 42, 43), (47, 42, 43), (61, 43, 42)],
                },
                '10': {
                    'cp': [(60, 199), (99, 220), (90, 166), (30, 235), (36, 172)],
                    'pc': [(39, 39, 40), (49, 39, 40), (60, 40, 40), (55, 60, 60), (60, 62, 62)],
                },
                '11': {
                    'cp': [(216, 202), (245, 220), (172, 157), (222, 166), (173, 250)],
                    'pc': [(57, 57, 58), (54, 57, 57), (62, 62, 62), (60, 30, 29), (62, 29, 29)],
                },
                '20': {
                    'cp': [(60, 343), (76, 334), (69, 349), (99, 364), (66, 376)],
                    'pc': [(42, 42, 43), (41, 42, 43), (58, 62, 62), (50, 42, 43), (58, 43, 42)],
                },
                '21': {
                    'cp': [(204, 343), (216, 346), (244, 364), (222, 310), (235, 310)],
                    'pc': [(56, 57, 57), (60, 62, 62), (45, 33, 34), (61, 34, 33), (60, 34, 33)],
                },
                '30': {
                    'cp': [(71, 490), (99, 511), (59, 487), (78, 457), (14, 547)],
                    'pc': [(52, 49, 50), (54, 49, 50), (54, 53, 53), (60, 53, 53), (60, 62, 62)],
                },
                '31': {
                    'cp': [(204, 487), (244, 508), (246, 454), (179, 520), (195, 502)],
                    'pc': [(58, 58, 58), (50, 42, 43), (58, 59, 59), (60, 59, 59), (47, 42, 43)],
                },
            },
            'B': {
                '00': {
                    'cp': [(29, 76), (19, 97), (18, 76), (46, 46), (65, 31)],
                    'pc': [(58, 50, 50), (59, 53, 53), (58, 50, 50), (61, 50, 50), (60, 49, 49)],
                },
                '01': {
                    'cp': [(191, 46), (174, 76), (245, 37), (210, 31), (163, 97)],
                    'pc': [(61, 44, 44), (59, 44, 44), (58, 44, 44), (61, 43, 42), (60, 42, 41)],
                },
                '10': {
                    'cp': [(19, 241), (30, 232), (65, 175), (103, 241), (103, 184)],
                    'pc': [(60, 47, 47), (61, 47, 47), (59, 40, 39), (57, 47, 47), (61, 47, 47)],
                },
                '11': {
                    'cp': [(174, 220), (163, 241), (229, 199), (256, 226), (229, 256)],
                    'pc': [(57, 58, 57), (61, 29, 29), (61, 30, 29), (61, 30, 29), (59, 61, 61)],
                },
                '20': {
                    'cp': [(19, 385), (30, 373), (66, 319), (25, 328), (47, 310)],
                    'pc': [(60, 49, 49), (56, 62, 62), (56, 49, 49), (57, 56, 56), (59, 43, 42)],
                },
                '21': {
                    'cp': [(174, 364), (163, 385), (207, 316), (232, 307), (192, 310)],
                    'pc': [(56, 62, 62), (60, 34, 33), (57, 53, 53), (45, 33, 34), (60, 34, 33)],
                },
                '30': {
                    'cp': [(29, 508), (47, 478), (65, 463), (107, 457), (48, 454)],
                    'pc': [(58, 50, 50), (60, 54, 54), (60, 49, 49), (56, 62, 62), (58, 53, 53)],
                },
                '31': {
                    'cp': [(191, 478), (183, 487), (174, 511), (207, 461), (231, 493)],
                    'pc': [(61, 44, 44), (60, 44, 44), (59, 44, 44), (72, 40, 39), (57, 44, 44)],
                },
            },
            'C': {
                '00': {
                    'cp': [(24, 100), (59, 40), (54, 91), (102, 64), (96, 31)],
                    'pc': [(47, 48, 49), (59, 49, 49), (52, 54, 54), (56, 49, 49), (60, 54, 54)],
                },
                '01': {
                    'cp': [(203, 91), (241, 61), (204, 22), (161, 34), (164, 61)],
                    'pc': [(61, 44, 44), (59, 44, 44), (59, 44, 44), (60, 43, 42), (60, 44, 44)],
                },
                '10': {
                    'cp': [(59, 184), (23, 169), (102, 208), (38, 169), (110, 172)],
                    'pc': [(60, 40, 39), (60, 62, 62), (58, 40, 40), (58, 62, 62), (56, 62, 62)],
                },
                '11': {
                    'cp': [(206, 235), (169, 241), (202, 163), (255, 202), (227, 157)],
                    'pc': [(61, 30, 29), (59, 29, 29), (61, 30, 29), (60, 58, 57), (60, 62, 62)],
                },
                '20': {
                    'cp': [(56, 376), (18, 391), (28, 355), (71, 325), (30, 322)],
                    'pc': [(61, 43, 42), (55, 56, 56), (55, 56, 56), (59, 43, 42), (60, 62, 62)],
                },
                '21': {
                    'cp': [(201, 376), (202, 307), (168, 313), (222, 313), (243, 319)],
                    'pc': [(61, 34, 33), (60, 34, 33), (60, 62, 62), (59, 34, 33), (60, 34, 33)],
                },
                '30': {
                    'cp': [(57, 520), (102, 496), (58, 451), (24, 457), (23, 490)],
                    'pc': [(59, 53, 53), (56, 49, 49), (60, 53, 53), (53, 48, 49), (55, 54, 54)],
                },
                '31': {
                    'cp': [(201, 520), (202, 505), (177, 526), (162, 508), (236, 472)],
                    'pc': [(60, 43, 42), (59, 44, 44), (42, 60, 60), (59, 44, 44), (59, 43, 43)],
                },
            },
            'D': {
                '00': {
                    'cp': [(88, 73), (89, 94), (32, 91), (21, 91), (17, 112)],
                    'pc': [(47, 49, 49), (62, 62, 62), (59, 49, 48), (50, 53, 53), (59, 50, 50)],
                },
                '01': {
                    'cp': [(238, 34), (204, 112), (175, 85), (165, 91), (160, 109)],
                    'pc': [(61, 43, 43), (51, 42, 43), (61, 43, 42), (42, 44, 44), (59, 43, 42)],
                },
                '10': {
                    'cp': [(79, 223), (85, 211), (29, 226), (29, 253), (27, 169)],
                    'pc': [(60, 40, 39), (60, 40, 40), (48, 39, 40), (58, 40, 39), (60, 62, 62)],
                },
                '11': {
                    'cp': [(204, 256), (191, 235), (204, 181), (173, 223), (224, 259)],
                    'pc': [(44, 29, 30), (61, 29, 29), (61, 30, 29), (43, 28, 29), (62, 30, 29)],
                },
                '20': {
                    'cp': [(62, 385), (44, 400), (80, 316), (34, 322), (18, 373)],
                    'pc': [(59, 43, 42), (54, 56, 56), (59, 49, 49), (59, 43, 42), (58, 49, 49)],
                },
                '21': {
                    'cp': [(233, 361), (215, 337), (193, 385), (173, 367), (161, 364)],
                    'pc': [(37, 33, 34), (61, 34, 33), (61, 34, 33), (45, 33, 34), (53, 53, 53)],
                },
                '30': {
                    'cp': [(62, 529), (78, 547), (31, 544), (59, 478), (36, 484)],
                    'pc': [(58, 49, 49), (60, 62, 62), (55, 49, 50), (56, 50, 50), (47, 48, 49)],
                },
                '31': {
                    'cp': [(224, 547), (204, 544), (174, 541), (166, 469), (212, 457)],
                    'pc': [(61, 43, 42), (51, 42, 43), (58, 43, 42), (61, 44, 44), (59, 43, 42)],
                },
            },
        },
        'second': {
            'A': {
                '00': {
                    'cp': [(46, 82), (53, 55), (82, 22), (22, 94), (90, 31)],
                    'pc': [(56, 62, 62), (59, 62, 62), (60, 54, 54), (61, 50, 50), (58, 49, 49)],
                },
                '01': {
                    'cp': [(168, 97), (198, 58), (253, 40), (234, 76), (165, 31)],
                    'pc': [(59, 44, 44), (56, 62, 62), (60, 43, 43), (60, 44, 44), (57, 62, 62)],
                },
                '10': {
                    'cp': [(53, 199), (72, 250), (46, 223), (27, 211), (108, 187)],
                    'pc': [(57, 62, 62), (49, 39, 40), (59, 40, 39), (48, 39, 40), (61, 40, 40)],
                },
                '11': {
                    'cp': [(201, 211), (199, 244), (161, 181), (254, 190), (248, 214)],
                    'pc': [(38, 29, 30), (60, 30, 29), (61, 29, 29), (61, 30, 29), (61, 30, 29)],
                },
                '20': {
                    'cp': [(54, 388), (72, 394), (96, 340), (71, 319), (28, 331)],
                    'pc': [(58, 43, 42), (49, 42, 43), (59, 43, 42), (58, 49, 49), (61, 43, 42)],
                },
                '21': {
                    'cp': [(199, 388), (193, 328), (235, 319), (245, 355), (173, 331)],
                    'pc': [(59, 34, 33), (61, 34, 33), (60, 34, 33), (58, 53, 53), (61, 34, 33)],
                },
                '30': {
                    'cp': [(89, 508), (70, 463), (40, 484), (30, 505), (106, 541)],
                    'pc': [(59, 50, 50), (61, 49, 49), (50, 49, 50), (61, 50, 50), (58, 62, 62)],
                },
                '31': {
                    'cp': [(252, 466), (255, 481), (176, 472), (174, 511), (171, 535)],
                    'pc': [(59, 44, 44), (61, 43, 43), (60, 43, 42), (59, 43, 42), (60, 44, 44)],
                },
            },
            'B': {
                '00': {
                    'cp': [(57, 61), (95, 43), (42, 88), (70, 16), (93, 109)],
                    'pc': [(58, 50, 50), (60, 49, 49), (59, 50, 50), (56, 62, 62), (58, 50, 50)],
                },
                '01': {
                    'cp': [(206, 70), (240, 43), (225, 43), (231, 19), (173, 61)],
                    'pc': [(59, 44, 44), (61, 43, 43), (60, 43, 43), (61, 43, 43), (60, 44, 44)],
                },
                '10': {
                    'cp': [(95, 187), (78, 181), (49, 217), (42, 169), (86, 163)],
                    'pc': [(60, 40, 40), (59, 40, 39), (61, 40, 39), (59, 40, 39), (60, 40, 40)],
                },
                '11': {
                    'cp': [(240, 187), (225, 190), (182, 193), (177, 214), (186, 250)],
                    'pc': [(61, 30, 29), (61, 30, 29), (62, 29, 29), (61, 29, 29), (40, 28, 29)],
                },
                '20': {
                    'cp': [(95, 331), (46, 322), (31, 352), (91, 397), (44, 316)],
                    'pc': [(60, 43, 42), (57, 62, 62), (57, 43, 42), (61, 49, 49), (56, 56, 56)],
                },
                '21': {
                    'cp': [(240, 331), (236, 367), (198, 370), (169, 370), (186, 310)],
                    'pc': [(61, 34, 33), (61, 34, 33), (60, 34, 33), (61, 53, 53), (60, 34, 33)],
                },
                '30': {
                    'cp': [(95, 475), (78, 469), (46, 466), (41, 490), (41, 451)],
                    'pc': [(60, 49, 49), (58, 49, 49), (56, 62, 62), (60, 54, 54), (59, 53, 53)],
                },
                '31': {
                    'cp': [(240, 475), (202, 493), (232, 544), (186, 454), (177, 499)],
                    'pc': [(61, 43, 43), (59, 44, 44), (60, 44, 44), (59, 43, 42), (61, 43, 42)],
                },
            },
            'C': {
                '00': {
                    'cp': [(23, 58), (54, 94), (102, 46), (28, 31), (78, 22)],
                    'pc': [(59, 49, 48), (58, 50, 50), (56, 50, 50), (59, 49, 50), (58, 50, 50)],
                },
                '01': {
                    'cp': [(225, 73), (208, 46), (204, 31), (162, 61), (185, 91)],
                    'pc': [(60, 43, 43), (60, 44, 44), (61, 43, 42), (59, 44, 44), (61, 44, 44)],
                },
                '10': {
                    'cp': [(73, 199), (58, 250), (102, 238), (24, 214), (19, 166)],
                    'pc': [(59, 47, 47), (61, 47, 47), (60, 40, 40), (61, 40, 39), (60, 40, 39)],
                },
                '11': {
                    'cp': [(202, 250), (189, 244), (206, 166), (255, 169), (158, 193)],
                    'pc': [(62, 30, 29), (61, 29, 29), (61, 30, 29), (62, 30, 29), (62, 29, 29)],
                },
                '20': {
                    'cp': [(17, 313), (58, 394), (66, 331), (107, 304), (24, 358)],
                    'pc': [(59, 43, 42), (60, 49, 49), (60, 43, 42), (57, 56, 56), (61, 43, 42)],
                },
                '21': {
                    'cp': [(202, 394), (176, 367), (165, 328), (180, 304), (257, 319)],
                    'pc': [(61, 34, 33), (61, 34, 33), (56, 53, 53), (61, 34, 33), (60, 53, 53)],
                },
                '30': {
                    'cp': [(58, 538), (66, 475), (18, 508), (99, 466), (48, 481)],
                    'pc': [(60, 53, 53), (57, 49, 49), (59, 50, 50), (58, 49, 49), (50, 49, 50)],
                },
                '31': {
                    'cp': [(202, 538), (224, 499), (223, 454), (190, 460), (255, 460)],
                    'pc': [(61, 43, 42), (59, 43, 42), (59, 44, 44), (60, 44, 44), (59, 43, 43)],
                },
            },
            'D': {
                '00': {
                    'cp': [(26, 106), (43, 112), (72, 73), (78, 31), (30, 37)],
                    'pc': [(58, 50, 50), (58, 62, 62), (61, 49, 49), (61, 49, 49), (58, 49, 48)],
                },
                '01': {
                    'cp': [(234, 46), (171, 31), (194, 28), (185, 106), (162, 82)],
                    'pc': [(62, 43, 43), (58, 43, 42), (57, 44, 44), (48, 44, 44), (61, 44, 44)],
                },
                '10': {
                    'cp': [(56, 253), (90, 190), (59, 160), (48, 190), (60, 220)],
                    'pc': [(45, 39, 40), (62, 47, 47), (49, 39, 40), (40, 39, 40), (39, 39, 40)],
                },
                '11': {
                    'cp': [(225, 160), (223, 175), (222, 229), (188, 214), (234, 190)],
                    'pc': [(61, 30, 29), (61, 30, 29), (62, 30, 29), (61, 29, 29), (62, 30, 29)],
                },
                '20': {
                    'cp': [(84, 352), (47, 331), (78, 319), (32, 331), (80, 304)],
                    'pc': [(58, 56, 56), (60, 43, 42), (59, 43, 42), (51, 49, 49), (60, 43, 42)],
                },
                '21': {
                    'cp': [(204, 304), (229, 349), (222, 373), (210, 382), (175, 325)],
                    'pc': [(45, 33, 34), (62, 53, 53), (61, 34, 33), (60, 34, 33), (60, 34, 33)],
                },
                '30': {
                    'cp': [(89, 478), (59, 448), (54, 496), (30, 469), (14, 547)],
                    'pc': [(62, 49, 49), (53, 48, 49), (58, 49, 49), (58, 49, 48), (59, 62, 62)],
                },
                '31': {
                    'cp': [(229, 499), (227, 463), (204, 448), (176, 472), (173, 502)],
                    'pc': [(57, 61, 61), (59, 44, 44), (50, 42, 43), (59, 43, 42), (44, 44, 44)],
                },
            },
        },
        'third': {
            'A': {
                '00': {
                    'cp': [(75, 49), (22, 40), (89, 25), (21, 97), (107, 70)],
                    'pc': [(56, 62, 62), (58, 62, 62), (61, 50, 50), (60, 54, 54), (59, 49, 49)],
                },
                '01': {
                    'cp': [(221, 49), (198, 40), (237, 28), (243, 16), (165, 82)],
                    'pc': [(42, 42, 43), (45, 44, 44), (60, 44, 44), (48, 44, 44), (60, 44, 44)],
                },
                '10': {
                    'cp': [(76, 193), (112, 217), (37, 181), (41, 208), (30, 166)],
                    'pc': [(38, 39, 40), (61, 40, 40), (59, 47, 47), (59, 47, 47), (60, 62, 62)],
                },
                '11': {
                    'cp': [(235, 187), (179, 187), (191, 244), (170, 208), (252, 214)],
                    'pc': [(61, 30, 29), (61, 29, 29), (62, 29, 29), (60, 29, 29), (61, 30, 29)],
                },
                '20': {
                    'cp': [(84, 379), (114, 331), (108, 310), (36, 337), (47, 373)],
                    'pc': [(59, 43, 42), (59, 43, 43), (43, 42, 43), (61, 49, 49), (59, 43, 42)],
                },
                '21': {
                    'cp': [(221, 337), (203, 349), (222, 304), (170, 352), (200, 394)],
                    'pc': [(34, 33, 34), (60, 34, 33), (61, 34, 33), (59, 34, 33), (61, 34, 33)],
                },
                '30': {
                    'cp': [(72, 478), (107, 502), (40, 496), (77, 448), (107, 502)],
                    'pc': [(50, 49, 50), (59, 49, 49), (60, 49, 48), (61, 49, 49), (59, 49, 49)],
                },
                '31': {
                    'cp': [(214, 475), (244, 496), (193, 502), (183, 448), (250, 454)],
                    'pc': [(42, 44, 44), (59, 43, 43), (45, 44, 44), (57, 44, 44), (61, 44, 44)],
                },
            },
            'B': {
                '00': {
                    'cp': [(18, 16), (23, 31), (66, 70), (43, 88), (28, 112)],
                    'pc': [(58, 49, 48), (59, 53, 53), (60, 53, 53), (59, 49, 48), (59, 49, 48)],
                },
                '01': {
                    'cp': [(172, 19), (182, 52), (210, 70), (164, 91), (164, 76)],
                    'pc': [(42, 42, 43), (60, 44, 44), (61, 43, 42), (61, 44, 44), (48, 44, 44)],
                },
                '10': {
                    'cp': [(28, 163), (22, 175), (57, 190), (41, 214), (71, 238)],
                    'pc': [(45, 47, 47), (58, 40, 39), (62, 62, 62), (50, 47, 47), (60, 40, 39)],
                },
                '11': {
                    'cp': [(205, 193), (163, 160), (167, 175), (158, 217), (163, 250)],
                    'pc': [(61, 30, 29), (61, 29, 29), (61, 29, 29), (62, 29, 29), (61, 29, 29)],
                },
                '20': {
                    'cp': [(18, 304), (23, 319), (62, 355), (14, 361), (18, 394)],
                    'pc': [(59, 43, 42), (55, 49, 49), (59, 43, 42), (61, 49, 49), (59, 43, 42)],
                },
                '21': {
                    'cp': [(163, 304), (176, 322), (205, 337), (209, 397), (163, 394)],
                    'pc': [(60, 34, 33), (61, 34, 33), (61, 34, 33), (61, 34, 33), (60, 34, 33)],
                },
                '30': {
                    'cp': [(18, 448), (27, 451), (60, 481), (43, 487), (43, 520)],
                    'pc': [(58, 49, 48), (47, 48, 49), (58, 49, 49), (60, 50, 50), (59, 49, 48)],
                },
                '31': {
                    'cp': [(163, 448), (167, 463), (205, 481), (174, 496), (208, 538)],
                    'pc': [(59, 43, 42), (61, 43, 42), (60, 43, 42), (57, 44, 44), (59, 43, 42)],
                },
            },
            'C': {
                '00': {
                    'cp': [(41, 88), (26, 40), (101, 28), (115, 82), (74, 34)],
                    'pc': [(58, 49, 48), (56, 50, 50), (56, 62, 62), (61, 50, 50), (59, 50, 50)],
                },
                '01': {
                    'cp': [(172, 19), (171, 40), (188, 88), (211, 106), (228, 52)],
                    'pc': [(42, 42, 43), (57, 44, 44), (59, 43, 42), (61, 44, 44), (60, 44, 44)],
                },
                '10': {
                    'cp': [(25, 181), (27, 163), (95, 202), (114, 181), (56, 184)],
                    'pc': [(58, 47, 47), (42, 39, 40), (59, 40, 40), (61, 40, 40), (60, 40, 39)],
                },
                '11': {
                    'cp': [(186, 232), (186, 214), (213, 196), (169, 181), (257, 184)],
                    'pc': [(61, 29, 29), (61, 29, 29), (61, 30, 29), (61, 29, 29), (62, 30, 29)],
                },
                '20': {
                    'cp': [(41, 376), (27, 307), (42, 325), (98, 397), (41, 325)],
                    'pc': [(59, 43, 42), (45, 42, 43), (61, 49, 49), (59, 43, 42), (61, 43, 42)],
                },
                '21': {
                    'cp': [(171, 322), (186, 358), (186, 376), (245, 325), (227, 397)],
                    'pc': [(40, 33, 34), (61, 34, 33), (60, 34, 33), (61, 34, 33), (60, 34, 33)],
                },
                '30': {
                    'cp': [(41, 520), (26, 472), (113, 520), (114, 469), (72, 475)],
                    'pc': [(58, 49, 48), (56, 50, 50), (58, 50, 50), (61, 49, 49), (51, 48, 49)],
                },
                '31': {
                    'cp': [(172, 451), (186, 520), (178, 490), (258, 520), (231, 481)],
                    'pc': [(42, 42, 43), (59, 43, 42), (57, 44, 44), (59, 44, 44), (59, 44, 44)],
                },
            },
            'D': {
                '00': {
                    'cp': [(61, 106), (30, 61), (107, 25), (30, 43), (71, 40)],
                    'pc': [(58, 50, 50), (58, 49, 48), (57, 53, 53), (58, 49, 48), (57, 53, 53)],
                },
                '01': {
                    'cp': [(198, 52), (215, 40), (171, 25), (180, 88), (238, 82)],
                    'pc': [(61, 43, 42), (59, 43, 42), (60, 43, 42), (60, 43, 42), (61, 44, 44)],
                },
                '10': {
                    'cp': [(88, 238), (38, 193), (42, 166), (16, 232), (107, 169)],
                    'pc': [(59, 40, 40), (61, 47, 47), (59, 40, 39), (61, 40, 39), (58, 47, 47)],
                },
                '11': {
                    'cp': [(171, 169), (233, 238), (180, 232), (223, 163), (243, 160)],
                    'pc': [(61, 29, 29), (61, 30, 29), (61, 29, 29), (31, 29, 30), (60, 30, 29)],
                },
                '20': {
                    'cp': [(89, 382), (44, 373), (52, 358), (95, 301), (69, 391)],
                    'pc': [(61, 49, 49), (61, 43, 42), (61, 43, 42), (59, 56, 56), (56, 62, 62)],
                },
                '21': {
                    'cp': [(173, 391), (189, 385), (255, 361), (198, 340), (243, 304)],
                    'pc': [(41, 33, 34), (61, 34, 33), (60, 34, 33), (61, 34, 33), (59, 34, 33)],
                },
                '30': {
                    'cp': [(61, 538), (64, 493), (55, 499), (78, 451), (98, 448)],
                    'pc': [(58, 50, 50), (60, 50, 50), (61, 53, 53), (49, 48, 49), (56, 49, 49)],
                },
                '31': {
                    'cp': [(206, 538), (158, 478), (215, 472), (238, 466), (187, 454)],
                    'pc': [(59, 44, 44), (61, 44, 44), (59, 43, 42), (59, 43, 43), (59, 43, 42)],
                },
            },
        },
        'fourth': {
            'A': {
                '00': {
                    'cp': [(77, 76), (72, 25), (56, 43), (24, 79), (23, 25)],
                    'pc': [(61, 49, 49), (48, 48, 49), (59, 48, 48), (48, 49, 50), (59, 50, 50)],
                },
                '01': {
                    'cp': [(230, 70), (174, 85), (162, 94), (161, 73), (186, 31)],
                    'pc': [(60, 44, 44), (59, 43, 42), (57, 42, 41), (60, 43, 42), (62, 43, 42)],
                },
                '10': {
                    'cp': [(19, 193), (24, 247), (72, 169), (48, 181), (66, 166)],
                    'pc': [(60, 40, 39), (40, 39, 40), (40, 39, 40), (61, 40, 39), (61, 40, 39)],
                },
                '11': {
                    'cp': [(211, 199), (192, 214), (175, 232), (169, 256), (234, 172)],
                    'pc': [(61, 30, 29), (61, 29, 29), (60, 29, 29), (31, 28, 29), (62, 30, 29)],
                },
                '20': {
                    'cp': [(90, 337), (17, 310), (27, 370), (45, 400), (72, 313)],
                    'pc': [(59, 43, 42), (61, 43, 42), (60, 43, 42), (58, 43, 42), (42, 42, 43)],
                },
                '21': {
                    'cp': [(176, 328), (167, 337), (192, 388), (162, 379), (234, 316)],
                    'pc': [(60, 34, 33), (60, 34, 33), (61, 34, 33), (60, 34, 33), (61, 34, 33)],
                },
                '30': {
                    'cp': [(24, 535), (89, 460), (104, 547), (31, 487), (42, 451)],
                    'pc': [(47, 48, 49), (61, 49, 49), (62, 62, 62), (58, 50, 50), (57, 54, 54)],
                },
                '31': {
                    'cp': [(230, 502), (245, 454), (173, 499), (211, 487), (161, 520)],
                    'pc': [(60, 44, 44), (44, 42, 43), (61, 43, 42), (61, 43, 42), (60, 43, 42)],
                },
            },
            'B': {
                '00': {
                    'cp': [(92, 61), (27, 73), (89, 40), (53, 34), (85, 16)],
                    'pc': [(59, 50, 50), (58, 50, 50), (61, 49, 49), (59, 49, 49), (61, 49, 49)],
                },
                '01': {
                    'cp': [(234, 37), (190, 49), (172, 73), (160, 109), (231, 73)],
                    'pc': [(61, 43, 43), (61, 44, 44), (59, 44, 44), (46, 44, 44), (59, 43, 43)],
                },
                '10': {
                    'cp': [(30, 169), (18, 202), (25, 235), (85, 229), (15, 211)],
                    'pc': [(58, 47, 47), (58, 47, 47), (58, 47, 47), (61, 40, 40), (60, 39, 39)],
                },
                '11': {
                    'cp': [(162, 202), (163, 256), (230, 226), (234, 181), (198, 175)],
                    'pc': [(61, 29, 29), (61, 29, 29), (61, 30, 29), (62, 30, 29), (61, 30, 29)],
                },
                '20': {
                    'cp': [(87, 331), (35, 304), (18, 400), (15, 358), (24, 328)],
                    'pc': [(59, 43, 42), (61, 43, 42), (61, 43, 42), (60, 42, 42), (60, 62, 62)],
                },
                '21': {
                    'cp': [(234, 325), (164, 310), (180, 304), (169, 367), (199, 400)],
                    'pc': [(61, 34, 33), (60, 34, 33), (61, 34, 33), (61, 34, 33), (61, 34, 33)],
                },
                '30': {
                    'cp': [(52, 502), (45, 481), (21, 451), (15, 541), (92, 493)],
                    'pc': [(58, 49, 49), (61, 50, 50), (53, 48, 49), (51, 49, 50), (59, 50, 50)],
                },
                '31': {
                    'cp': [(218, 478), (168, 475), (237, 493), (180, 448), (189, 487)],
                    'pc': [(56, 43, 42), (61, 43, 42), (60, 44, 44), (61, 43, 42), (59, 44, 44)],
                },
            },
            'C': {
                '00': {
                    'cp': [(102, 94), (78, 55), (18, 97), (52, 43), (78, 55)],
                    'pc': [(59, 53, 53), (60, 49, 49), (57, 49, 48), (50, 48, 49), (60, 49, 49)],
                },
                '01': {
                    'cp': [(227, 34), (221, 58), (186, 22), (255, 76), (160, 100)],
                    'pc': [(60, 43, 43), (60, 43, 42), (60, 43, 42), (60, 44, 44), (60, 44, 44)],
                },
                '10': {
                    'cp': [(80, 178), (114, 223), (79, 244), (18, 241), (107, 181)],
                    'pc': [(61, 40, 40), (61, 40, 40), (59, 40, 39), (58, 40, 39), (60, 40, 40)],
                },
                '11': {
                    'cp': [(186, 166), (162, 184), (186, 229), (217, 220), (255, 190)],
                    'pc': [(61, 29, 29), (62, 29, 29), (56, 62, 62), (61, 30, 29), (61, 30, 29)],
                },
                '20': {
                    'cp': [(78, 322), (52, 331), (78, 385), (107, 325), (22, 340)],
                    'pc': [(42, 42, 43), (44, 42, 43), (61, 43, 42), (60, 43, 42), (55, 43, 42)],
                },
                '21': {
                    'cp': [(225, 322), (194, 334), (193, 382), (244, 373), (167, 310)],
                    'pc': [(62, 34, 33), (61, 34, 33), (59, 34, 33), (61, 34, 33), (60, 34, 33)],
                },
                '30': {
                    'cp': [(71, 475), (18, 529), (73, 523), (102, 454), (17, 472)],
                    'pc': [(60, 49, 49), (57, 49, 48), (59, 50, 50), (59, 50, 50), (61, 49, 48)],
                },
                '31': {
                    'cp': [(216, 475), (234, 496), (224, 532), (170, 508), (162, 472)],
                    'pc': [(61, 43, 42), (59, 44, 44), (59, 43, 42), (59, 43, 42), (61, 43, 42)],
                },
            },
            'D': {
                '00': {
                    'cp': [(53, 37), (102, 37), (102, 91), (24, 88), (17, 25)],
                    'pc': [(61, 49, 49), (58, 49, 49), (60, 49, 49), (58, 53, 53), (58, 49, 48)],
                },
                '01': {
                    'cp': [(224, 58), (189, 100), (162, 25), (255, 25), (192, 97)],
                    'pc': [(59, 43, 42), (60, 43, 42), (59, 43, 42), (58, 43, 43), (60, 44, 44)],
                },
                '10': {
                    'cp': [(81, 253), (114, 190), (60, 169), (17, 166), (95, 256)],
                    'pc': [(59, 40, 40), (59, 47, 47), (59, 40, 39), (59, 40, 39), (58, 40, 40)],
                },
                '11': {
                    'cp': [(162, 169), (215, 160), (207, 211), (222, 238), (181, 256)],
                    'pc': [(61, 29, 29), (61, 30, 29), (60, 30, 29), (61, 30, 29), (43, 28, 29)],
                },
                '20': {
                    'cp': [(50, 313), (36, 400), (29, 343), (102, 379), (109, 310)],
                    'pc': [(59, 43, 42), (50, 42, 43), (58, 43, 42), (58, 43, 42), (59, 43, 42)],
                },
                '21': {
                    'cp': [(195, 349), (173, 340), (247, 379), (251, 304), (189, 388)],
                    'pc': [(61, 34, 33), (61, 34, 33), (59, 34, 33), (60, 34, 33), (61, 34, 33)],
                },
                '30': {
                    'cp': [(66, 487), (102, 523), (36, 499), (42, 448), (107, 451)],
                    'pc': [(60, 49, 49), (60, 49, 49), (49, 48, 49), (58, 50, 50), (58, 49, 49)],
                },
                '31': {
                    'cp': [(198, 457), (174, 511), (210, 520), (179, 454), (252, 451)],
                    'pc': [(60, 43, 42), (59, 44, 44), (61, 43, 42), (60, 43, 42), (59, 43, 43)],
                },
            },
        },
    }

    def __init__(self, ser):
        self.ser = ser

    def transSerial(self, str1):
        self.ser.write(str1.encode())

    def keyPress(self, sub2):
        sub1 = 'KD'
        trans = sub1 + sub2
        self.transSerial(trans)

    def keyRelease(self, sub2):
        sub1 = 'KU'
        trans = sub1 + sub2
        self.transSerial(trans)

    def scan_fp(self):
        data1 = self.presented
        bb1 = self.presented_b
        bb2 = self.operation_b
        presented_fp = mss.mss().grab(bb1)  # type: ignore
        operation_fp = mss.mss().grab(bb2)  # type: ignore
        for key, item in data1.items():
            pix_list1 = list()
            cp = item['cp']
            pc = item['pc']
            if self.debug_pix:
                print("key =", key)
                print("cp =", cp)
                print("pc =", pc)
            for po in cp:
                pix = presented_fp.pixel(po[0], po[1])
                pix_list1.append(pix)
            if self.debug_pix:
                print("PC =", pix_list1)
            if pc == pix_list1:
                if key == 'first':
                    print("presented fp =", key)
                elif key == 'second':
                    print("presented fp =", key)
                elif key == 'third':
                    print("presented fp =", key)
                elif key == 'fourth':
                    print("presented fp =", key)
                else:
                    print("presented fp = No matched")
                    return -1
                return self.get_solution(key, operation_fp)
            else:
                continue
        return -1

    def get_solution(self, input_, screen):
        solution = [
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
        ]
        data = self.solution_pix[input_]
        for key, item in data.items():  # key = 'A'
            if self.debug_pix:
                print("main key =", key)
            for key2, item2 in item.items():  # key2 = '00'
                pix_list = list()
                cp = item2['cp']
                pc = item2['pc']
                if self.debug_pix:
                    print("key =", key2)
                    print("cp =", cp)
                    print("pc =", pc)
                for po in cp:
                    pix = screen.pixel(po[0], po[1])
                    pix_list.append(pix)
                if self.debug_pix:
                    print("PC =", pix_list)
                if pc == pix_list:
                    if self.debug_pix:
                        print(key, "position =", key2)
                    int1 = int(key2[:1])
                    int2 = int(key2[-1])
                    solution[int1][int2] = key
                    break
                else:
                    continue
        return solution

    class Cursor:
        column_max = 3
        row_max = 1
        counter = 4
        delay = 0.015
        stop = False

        def __init__(self, solution, outer):
            self.outer = outer
            self.solution = solution
            self.location = [0, 0]
            self.self = 0
            self.bottom = 0
            self.bottom_left = 0
            self.right = 0
            self.get_values()

        def get_values(self):
            self.self = self.solution[self.location[0]][self.location[1]]
            if self.location[1] == 0:
                self.right = self.solution[self.location[0]][1]
                self.bottom_left = -1
                if self.location[0] + 1 > self.column_max:
                    self.bottom = -1
                else:
                    self.bottom = self.solution[self.location[0] + 1][self.location[1]]
            elif self.location[1] == 1:
                self.right = -1
                if self.location[0] + 1 > self.column_max:
                    self.bottom = -1
                    self.bottom_left = -1
                else:
                    self.bottom = self.solution[self.location[0] + 1][self.location[1]]
                    self.bottom_left = self.solution[self.location[0] + 1][0]

        def enter(self):
            self.outer.keyPress('ET')
            sleep(self.delay)
            self.outer.keyRelease('ET')
            sleep(self.delay)
            self.counter -= 1

        def down(self):
            if self.location[0] + 1 > self.column_max:
                return
            else:
                self.outer.keyPress('AD')
                sleep(self.delay)
                self.outer.keyRelease('AD')
                sleep(self.delay)
                self.location[0] += 1
                self.get_values()
                self.operation()

        def move_right(self):
            self.outer.keyPress('AR')
            sleep(self.delay)
            self.outer.keyRelease('AR')
            sleep(self.delay)
            if self.location[1] + 1 > self.row_max:
                if self.location[0] + 1 > self.column_max:
                    return
                else:
                    self.location[0] += 1
                    self.location[1] = 0
                    self.get_values()
                    self.operation()
            else:
                self.location[1] += 1
                self.get_values()
                self.operation()

        def operation(self):
            if self.self == 1:
                self.enter()
                if self.counter == 0:
                    self.outer.keyPress('TB')
                    sleep(self.delay)
                    self.outer.keyRelease('TB')
                    sleep(self.delay)
                    print("-> operation completed.")
                    return
            else:
                pass
            if self.right == 0:
                self.down()
            elif self.right == 1:
                self.move_right()
            elif self.bottom == 0 and self.bottom_left == 0:
                self.move_right()
            elif self.bottom_left == 0:
                self.down()
            elif self.bottom_left == 1:
                self.move_right()
            else:
                self.outer.keyPress('TB')
                sleep(self.delay)
                self.outer.keyRelease('TB')
                sleep(self.delay)
                print("-> operation completed.")
                return

    def operate_solution(self, input_solution):
        solution = [
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
        ]
        for i in range(0, 4):  # input_solution 이진화
            for j in range(0, 2):
                if input_solution[i][j] != 0:
                    solution[i][j] = 1
                else:
                    continue
        cursor = self.Cursor(solution, self)
        cursor.operation()

    def fingerPrint_hacking(self):
        solution = self.scan_fp()
        if solution != -1:
            for item in solution:
                print("[{}, {}]".format(item[0], item[1]))
        else:
            print("Something is wrong.")
        self.operate_solution(solution)
        return
